"""*******************************************************************************
Sistema operacional: Windows 10
Versão Python: 3.11.5 (64-bit)
Autor: João Marcelo Nascimento Fernandes
Componente Curricular: Algoritmos I
Concluido em: 19/02/2024
Declaro que este código foi elaborado por mim de forma individual e não contém nenhum
trecho de código de outro colega ou de outro autor, tais como provindos de livros e
apostilas, e páginas ou documentos eletrônicos da Internet. Qualquer trecho de código
de outra autoria que não a minha está destacado com uma citação para o autor e a fonte
do código, e estou ciente que estes trechos não serão considerados para fins de avaliação.
******************************************************************************************"""
#Inicio

#Classe Sessao que contêm as informações das sessões e as listas que guardam as filas das sessões e as anotações das consultas
class Sessao:
    def __init__(self, data, horario_inicio, horario_fim):
        self.data = data
        self.horario_inicio = horario_inicio
        self.horario_fim = horario_fim
        self.fila_sessao = []
        self.sessao_dentista = None
        self.anotacoes = []

#Classe Paciente que contém o gerador de ID e os dados dos pacientes
class Paciente:
    contador_id = 1

    def __init__(self, nome, idade):
        self.id = Paciente.contador_id
        Paciente.contador_id += 1
        self.nome = nome
        self.idade = idade

#Classe consulta que contém as informações das consultas
class Consulta:
    def __init__(self, paciente, sessao):
        self.paciente = paciente
        self.sessao = sessao

#Classe Dentista que contém os dados da sessão do dentista
class Dentista:
    def __init__(self, data, horario_inicio):
        self.data = data
        self.horario_inicio = horario_inicio
        self.consultas = []

#Classe Recepcao que contém a maior parte do código
class Recepcao:
    def __init__(self):
        self.sessoes = []
        self.sessao_atual = None
        self.pacientes = []
        self.paciente_atual = None
        self.menu_selecionado = None
        

    def buscarPaciente(self, id_paciente):
        for paciente in self.pacientes:
            if paciente.id == id_paciente:
                return paciente
        print('Paciente não esta cadastrado.')
        return None

    def criarSessao(self, data, horario_inicio, horario_fim):
        nova_sessao = Sessao(data, horario_inicio, horario_fim)
        self.sessoes.append(nova_sessao)
        print(f'Sessão {nova_sessao.data}, das {nova_sessao.horario_inicio} às {nova_sessao.horario_fim} criada')
    
    def listarSessoes(self):
        for sessao in self.sessoes:
            print(f'Sessão {sessao.data} das {sessao.horario_inicio} às {sessao.horario_fim}')
    
    def buscarSessao(self, data):
        for sessao in self.sessoes:
            if sessao.data == data:
                print(f'Sessão {sessao.data} das {sessao.horario_inicio} às {sessao.horario_fim}')
                return sessao
        print('Não há sessão marcada nessa data')
        return None

    def iniciarSessao(self, data):
        validacao_sessao = self.buscarSessao(data)
        if validacao_sessao:
            self.sessao_atual = validacao_sessao
            self.sessao_atual.sessao_dentista = Dentista(self.sessao_atual.data, self.sessao_atual.horario_inicio)
            print(f'Sessão {self.sessao_atual.data} das {self.sessao_atual.horario_inicio} às {self.sessao_atual.horario_fim} iniciada.')
        else:
            print('Sessão não existe')

    
    def adicionarPaciente(self, nome, idade):
        novo_paciente = Paciente(nome, idade)
        self.pacientes.append(novo_paciente)
        print(f'Paciente {novo_paciente.nome} cadastrado, ID: {novo_paciente.id}')

    def marcarConsulta(self, id_paciente, sessao_data):
        paciente = self.buscarPaciente(id_paciente)
        if paciente:
            sessao = self.buscarSessao(sessao_data)
            if sessao:
                consulta = Consulta(paciente, sessao)
                sessao.fila_sessao.append(consulta)
                print(f'Marcado horário para {paciente.nome} na sessão {sessao.data}.')

    def listarConsultas(self, id_paciente):
        paciente = self.buscarPaciente(id_paciente)
        if paciente:
            print(f"Horários marcados para {paciente.nome}:")
            consultas_marcadas = False
            for sessao in self.sessoes:
                for consulta in sessao.fila_sessao:
                    if consulta.paciente == paciente:
                        print(f'Sessão {sessao.data} das {sessao.horario_inicio} as {sessao.horario_fim}')
                        consultas_marcadas = True
            if not consultas_marcadas:
                print('Nã há consulta marcada para este paciente')
        else:
            print('Paciente não encontrado')

    def confirmarConsulta(self, id_paciente):
        paciente = self.buscarPaciente(id_paciente)
        if paciente and self.sessao_atual:
            for consulta in self.sessao_atual.fila_sessao:
                if consulta.paciente == paciente:
                    print(f'{paciente.nome} tem consulta marcada para a sessão atual')
                    return True
            print(f'{paciente.nome} não tem consulta marcada para a sessão atual')
            return False

    def adicionarPacienteAFila(self, id_paciente):
        paciente = self.buscarPaciente(id_paciente)
        if paciente and self.sessao_atual:
            consulta = Consulta(paciente, self.sessao_atual)
            self.sessao_atual.fila_sessao.append(paciente)
            print(f'{paciente.nome} adicionado a fila')
        else:
            print('Paciente não encontrado ou sessão não iniciada')

    def listarProximoDaFila(self):
        if self.sessao_atual and self.sessao_atual.fila_sessao:
            proximo_consulta = self.sessao_atual.fila_sessao[0]
            proximo_paciente = proximo_consulta.paciente
            print(f'O proxímo paciente da fila é {proximo_paciente.nome}')
        else:
            print('Fila vazia ou sessão não iniciada.')
    
    def iniciarSessaoDentista(self):
        if self.sessao_atual:
            sessao_dentista = Dentista(self.sessao_atual.data, self.sessao_atual.horario_inicio)
            self.sessao_atual.sessao_dentista = sessao_dentista
            print(f'Sessão do dentista iniciada na {self.sessao_atual.data} às {self.sessao_atual.horario_inicio}.')
    
    def atenderPaciente(self):
        if self.sessao_atual and self.sessao_atual.sessao_dentista:
            if self.sessao_atual.fila_sessao:
                proximo_consulta = self.sessao_atual.fila_sessao.pop(0)
                self.paciente_atual = proximo_consulta.paciente
                print(f'Próximo paciente: {self.paciente_atual.nome}')
            else:
                print('Fila da sessão vazia.')
        else:
            print('Sessão do dentista não iniciada ou fila da sessão indisponível.')

    def prontuarioCompletoPacienteAtual(self, id_paciente):
        paciente = self.paciente_atual
        if paciente and self.sessao_atual:
            print(f'Prontuário completo de {paciente.nome}, idade: {paciente.idade} na sessão {self.sessao_atual.data}')
            for consulta in self.sessao_atual.sessao_dentista.consultas:
                if consulta.paciente == paciente:
                    print(f'''Consulta em {consulta.sessao.data}
                    Anotações:''')
                    for anotacao in consulta.sessao.anotacoes:
                        print(anotacao)
                    return
        else:
            print('Paciente não atendido nesta sessão.')

    def primeraAnotacaoPacienteAtual(self, id_paciente):
        paciente = self.paciente_atual
        if paciente:
            for sessao in self.sessoes:
                for consulta in sessao.sessao_dentista.consultas:
                    if consulta.paciente == paciente:
                        if consutlta.sessao.anotacoes:
                            print(f'''Primeira anotação do {paciente.nome} na sessão {sessao.data}:
                            {consulta.sessao.anotacoes[0]}''')
                            return
                        else:
                            print('Não há anotação prévia deste paciente')
                            return
            print('Paciente não atendido')
        else:
            print('Paciente não encontrado')

    def ultimaAnotacaoPacienteAtual(self, id_paciente):
        paciente = self.paciente_atual
        if paciente and self.sessao_atual:
            consulta_anterior = None
            for sessao in self.sessoes:
                for consulta in sessao.sessao_dentista.consultas:
                    if consulta.paciente == paciente:
                        consulta_anterior = sessao
                        break
                if consulta_anterior:
                    break
            if consulta_anterior:
                print(f'Última anotação de {paciente.nome} na sessão {consulta_anterior.data}')
                if consulta_anterior.anotacoes:
                    print(consulta_anterior.anotacoes[-1])
                else:
                    print("Não houve anotação na última consulta deste paciente")
            else:
                print('Não houve consulta anterior deste paciente')
        else:
            print('Paciente não encontrado para sessão atual')

    def adicionarAnotacaoPacienteAtual(self, id_paciente, anotacao):
        paciente = self.paciente_atual
        if paciente and self.sessao_atual and self.sessao_atual.sessao_dentista:
            for consulta in self.sessao_atual.sessao_dentista.consultas:
                if consulta.paciente == paciente:
                    consulta.sessao.anotacoes.append(anotacao)
                    print(f'Anotação de {paciente.nome} adicionado na sessão {self.sessao_atual.data}')
                    return
            print('Paciente não atendido na atual sessão')
        else:
            print('Paciente não encontrado na sessão atual')
    
    def listarConsultasFeitasDaSessao(self):
        if self.sessao_atual and self.sessao_atual.sessao_dentista:
            print(f'Consultas realizadas na sessão {self.sessao_atual.data}:')
            for consulta in self.sessao_atual.sessao_dentista.consultas:
                print(consulta.paciente.nome)
        else:
            print('Sessão não iniciada')

    def encerrarSessao(self):
        if self.sessao_atual and self.sessao_atual.sessao_dentista:
            sessao_atual = None
            sessao_dentista = None
            print('Sessão encerrada')
        else:
            print('Sessão não iniciada')

    def inicializarSistema(self):
        sessoes = [
            ("20/02/2024", "09:00", "12:00"),
            ("21/02/2024", "10:00", "13:00"),
            ("22/02/2024", "11:00", "14:00")
        ]
        for data, inicio, fim in sessoes:
            self.criarSessao(data, inicio, fim)

        pacientes = [
            ("João", 30),
            ("Maria", 25),
            ("Pedro", 40)
        ]
        for nome, idade in pacientes:
            self.adicionarPaciente(nome, idade)

    def selecaoMenu(self):
        print('''
        SELECIONE O MENU:
        1 - Recepção
        2 - Dentista
        0 - Sair
        ''')

    def menuRecepcao(self):
        print('''
        MENU RECEPÇÃO:
        1 - Criar nova sessão
        2 - Listar sessões
        3 - Buscar sessão
        4 - Adicionar novo paciente
        5 - Marcar consulta para paciente
        6 - Listar consultas marcadas para um paciente
        7 - iniciar sessão
        8 - Confirmar se paciente está marcado para sessão atual
        9 - Adicionar paciente à fila
        10 - Listar próximo paciente da fila de atendimento
        11 - Listar consultas realizadas numa sessão
        12 - Encerrar sessão
        0 - Voltar
        ''')

    def menuDentista(self):
        print('''
        MENU DENTISTA:
        1 - Buscar sessão
        2 - Iniciar sessão
        3 - Atender próximo paciente 
        4 - Ler prontuário do paciente atual
        5 - Ler primeira anotação do paciente atual
        6 - Ler anotação mais recente do paciente atual
        7 - Anotar prontuário do paciente atual
        0 - Voltar
        ''')
    
    def run(self):
        while True:
            self.selecaoMenu()
            escolha_menu = input('Selecione uma opção:')
            
            if escolha_menu == '0':
                print('Encerrando sistema')
                break
            elif escolha_menu == '1':
                self.menu_selecionado = self.menuRecepcao
            elif escolha_menu == '2':
                self.menu_selecionado = self.menuDentista
            else:
                print('Opção inválida, tente novamente')
                continue

            while True:
                self.menu_selecionado()
                opcoesmenu = input('Selecione uma opção: ')

                if opcoesmenu == '0':
                    break
                elif self.menu_selecionado == self.menuRecepcao:
                    if opcoesmenu == '1':
                        data = input('Digite a data da sessão (DD/MM/AAAA): ')
                        horario_inicio = input('Digite o horário de início da sessão (HH:MM): ')
                        horario_fim = input('Digite o horário do fim da sessão (HH:MM): ')
                        self.criarSessao(data, horario_inicio, horario_fim)
                    elif opcoesmenu == '2':
                        self.listarSessoes()
                    elif opcoesmenu == '3':
                        data = input('Digite a data da sessão (DD/MM/AAAA): ')
                        self.buscarSessao(data)
                    elif opcoesmenu == '4':
                        nome = input('Digite o nome do paciente: ')
                        idade = input('Digite a idade do paciente: ')
                        self.adicionarPaciente(nome, idade)
                    elif opcoesmenu == '5':
                        id_paciente = int(input('Digite o ID do paciente: '))
                        sessao_data = input('Digite a data da sessão (DD/MM/AAAA): ')
                        self.marcarConsulta(id_paciente, sessao_data)
                    elif opcoesmenu == '6':
                        id_paciente = int(input('Digite o ID do paciente: '))
                        self.listarConsultas(id_paciente)
                    elif opcoesmenu == '7':
                        data = input('Digite a data da sessão (DD/MM/AAAA): ')
                        self.iniciarSessao(data)
                    elif opcoesmenu == '8':
                        id_paciente = int(input('Digite o ID do paciente: '))
                        self.confirmarConsulta(id_paciente)
                    elif opcoesmenu == '9':
                        id_paciente = int(input('Digite o ID do paciente: '))
                        self.adicionarPacienteAFila(id_paciente)
                    elif opcoesmenu == '10':
                        self.listarProximoDaFila()
                    elif opcoesmenu == '11':
                        self.listarConsultasFeitasDaSessao()
                    elif opcoesmenu == '12':
                        self.encerrarSessao()
                    else:
                        print('Opção inválida, tente novamente')
                elif self.menu_selecionado == self.menuDentista:
                    if opcoesmenu == '1':
                        data = input('Digite a data da sessão (DD/MM/AAAA): ')
                        self.buscarSessao(data)
                    elif opcoesmenu == '2':
                        self.iniciarSessaoDentista()
                    elif opcoesmenu == '3':
                        self.atenderPaciente()
                    elif opcoesmenu == '4':
                        self.prontuarioCompletoPacienteAtual()
                    elif opcoesmenu == '5':
                        self.primeraAnotacaoPacienteAtual()
                    elif opcoesmenu == '6':
                        self.ultimaAnotacaoPacienteAtual()
                    elif opcoesmenu == '7':
                        anotacao = input('Digite a anotação da consulta: ')
                        self.adicionarAnotacaoPacienteAtual(id_paciente, anotacao)
                    else:
                        print('Opção inválida, tente novamente')




if __name__ == '__main__':
    DenteClean = Recepcao()
    DenteClean.inicializarSistema()
    DenteClean.run()

#Corrigir item 4 do dentista
